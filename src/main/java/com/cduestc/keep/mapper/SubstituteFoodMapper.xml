<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cduestc.keep.mapper.SubstituteFoodMapper">
  <resultMap id="BaseResultMap" type="com.cduestc.keep.model.SubstituteFood">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 05 16:16:31 CST 2020.
    -->
    <id column="food_ID" jdbcType="BIGINT" property="foodId" />
    <result column="food_name" jdbcType="CHAR" property="foodName" />
    <result column="image_url" jdbcType="VARCHAR" property="imageUrl" />
    <result column="calorie" jdbcType="INTEGER" property="calorie" />
    <result column="brand" jdbcType="VARCHAR" property="brand" />
    <result column="price" jdbcType="DOUBLE" property="price" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="storage" jdbcType="INTEGER" property="storage" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 05 16:16:31 CST 2020.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 05 16:16:31 CST 2020.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 05 16:16:31 CST 2020.
    -->
    food_ID, food_name, image_url, calorie, brand, price, description, `storage`
  </sql>
  <select id="selectByExample" parameterType="com.cduestc.keep.model.SubstituteFoodExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 05 16:16:31 CST 2020.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from substitute_food
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 05 16:16:31 CST 2020.
    -->
    select 
    <include refid="Base_Column_List" />
    from substitute_food
    where food_ID = #{foodId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 05 16:16:31 CST 2020.
    -->
    delete from substitute_food
    where food_ID = #{foodId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.cduestc.keep.model.SubstituteFoodExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 05 16:16:31 CST 2020.
    -->
    delete from substitute_food
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cduestc.keep.model.SubstituteFood">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 05 16:16:31 CST 2020.
    -->
    insert into substitute_food (food_ID, food_name, image_url, 
      calorie, brand, price, 
      description, `storage`)
    values (#{foodId,jdbcType=BIGINT}, #{foodName,jdbcType=CHAR}, #{imageUrl,jdbcType=VARCHAR}, 
      #{calorie,jdbcType=INTEGER}, #{brand,jdbcType=VARCHAR}, #{price,jdbcType=DOUBLE}, 
      #{description,jdbcType=VARCHAR}, #{storage,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.cduestc.keep.model.SubstituteFood">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 05 16:16:31 CST 2020.
    -->
    insert into substitute_food
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="foodId != null">
        food_ID,
      </if>
      <if test="foodName != null">
        food_name,
      </if>
      <if test="imageUrl != null">
        image_url,
      </if>
      <if test="calorie != null">
        calorie,
      </if>
      <if test="brand != null">
        brand,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="storage != null">
        `storage`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="foodId != null">
        #{foodId,jdbcType=BIGINT},
      </if>
      <if test="foodName != null">
        #{foodName,jdbcType=CHAR},
      </if>
      <if test="imageUrl != null">
        #{imageUrl,jdbcType=VARCHAR},
      </if>
      <if test="calorie != null">
        #{calorie,jdbcType=INTEGER},
      </if>
      <if test="brand != null">
        #{brand,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="storage != null">
        #{storage,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cduestc.keep.model.SubstituteFoodExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 05 16:16:31 CST 2020.
    -->
    select count(*) from substitute_food
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 05 16:16:31 CST 2020.
    -->
    update substitute_food
    <set>
      <if test="record.foodId != null">
        food_ID = #{record.foodId,jdbcType=BIGINT},
      </if>
      <if test="record.foodName != null">
        food_name = #{record.foodName,jdbcType=CHAR},
      </if>
      <if test="record.imageUrl != null">
        image_url = #{record.imageUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.calorie != null">
        calorie = #{record.calorie,jdbcType=INTEGER},
      </if>
      <if test="record.brand != null">
        brand = #{record.brand,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DOUBLE},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.storage != null">
        `storage` = #{record.storage,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 05 16:16:31 CST 2020.
    -->
    update substitute_food
    set food_ID = #{record.foodId,jdbcType=BIGINT},
      food_name = #{record.foodName,jdbcType=CHAR},
      image_url = #{record.imageUrl,jdbcType=VARCHAR},
      calorie = #{record.calorie,jdbcType=INTEGER},
      brand = #{record.brand,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DOUBLE},
      description = #{record.description,jdbcType=VARCHAR},
      `storage` = #{record.storage,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cduestc.keep.model.SubstituteFood">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 05 16:16:31 CST 2020.
    -->
    update substitute_food
    <set>
      <if test="foodName != null">
        food_name = #{foodName,jdbcType=CHAR},
      </if>
      <if test="imageUrl != null">
        image_url = #{imageUrl,jdbcType=VARCHAR},
      </if>
      <if test="calorie != null">
        calorie = #{calorie,jdbcType=INTEGER},
      </if>
      <if test="brand != null">
        brand = #{brand,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="storage != null">
        `storage` = #{storage,jdbcType=INTEGER},
      </if>
    </set>
    where food_ID = #{foodId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cduestc.keep.model.SubstituteFood">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 05 16:16:31 CST 2020.
    -->
    update substitute_food
    set food_name = #{foodName,jdbcType=CHAR},
      image_url = #{imageUrl,jdbcType=VARCHAR},
      calorie = #{calorie,jdbcType=INTEGER},
      brand = #{brand,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE},
      description = #{description,jdbcType=VARCHAR},
      `storage` = #{storage,jdbcType=INTEGER}
    where food_ID = #{foodId,jdbcType=BIGINT}
  </update>
</mapper>
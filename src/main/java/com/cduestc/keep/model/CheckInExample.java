package com.cduestc.keep.model;

import java.util.ArrayList;
import java.util.List;

public class CheckInExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table check_in
     *
     * @mbg.generated Sun Apr 19 02:58:57 CST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table check_in
     *
     * @mbg.generated Sun Apr 19 02:58:57 CST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table check_in
     *
     * @mbg.generated Sun Apr 19 02:58:57 CST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table check_in
     *
     * @mbg.generated Sun Apr 19 02:58:57 CST 2020
     */
    public CheckInExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table check_in
     *
     * @mbg.generated Sun Apr 19 02:58:57 CST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table check_in
     *
     * @mbg.generated Sun Apr 19 02:58:57 CST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table check_in
     *
     * @mbg.generated Sun Apr 19 02:58:57 CST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table check_in
     *
     * @mbg.generated Sun Apr 19 02:58:57 CST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table check_in
     *
     * @mbg.generated Sun Apr 19 02:58:57 CST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table check_in
     *
     * @mbg.generated Sun Apr 19 02:58:57 CST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table check_in
     *
     * @mbg.generated Sun Apr 19 02:58:57 CST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table check_in
     *
     * @mbg.generated Sun Apr 19 02:58:57 CST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table check_in
     *
     * @mbg.generated Sun Apr 19 02:58:57 CST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table check_in
     *
     * @mbg.generated Sun Apr 19 02:58:57 CST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table check_in
     *
     * @mbg.generated Sun Apr 19 02:58:57 CST 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andCheckInidIsNull() {
            addCriterion("check_inID is null");
            return (Criteria) this;
        }

        public Criteria andCheckInidIsNotNull() {
            addCriterion("check_inID is not null");
            return (Criteria) this;
        }

        public Criteria andCheckInidEqualTo(Long value) {
            addCriterion("check_inID =", value, "checkInid");
            return (Criteria) this;
        }

        public Criteria andCheckInidNotEqualTo(Long value) {
            addCriterion("check_inID <>", value, "checkInid");
            return (Criteria) this;
        }

        public Criteria andCheckInidGreaterThan(Long value) {
            addCriterion("check_inID >", value, "checkInid");
            return (Criteria) this;
        }

        public Criteria andCheckInidGreaterThanOrEqualTo(Long value) {
            addCriterion("check_inID >=", value, "checkInid");
            return (Criteria) this;
        }

        public Criteria andCheckInidLessThan(Long value) {
            addCriterion("check_inID <", value, "checkInid");
            return (Criteria) this;
        }

        public Criteria andCheckInidLessThanOrEqualTo(Long value) {
            addCriterion("check_inID <=", value, "checkInid");
            return (Criteria) this;
        }

        public Criteria andCheckInidIn(List<Long> values) {
            addCriterion("check_inID in", values, "checkInid");
            return (Criteria) this;
        }

        public Criteria andCheckInidNotIn(List<Long> values) {
            addCriterion("check_inID not in", values, "checkInid");
            return (Criteria) this;
        }

        public Criteria andCheckInidBetween(Long value1, Long value2) {
            addCriterion("check_inID between", value1, value2, "checkInid");
            return (Criteria) this;
        }

        public Criteria andCheckInidNotBetween(Long value1, Long value2) {
            addCriterion("check_inID not between", value1, value2, "checkInid");
            return (Criteria) this;
        }

        public Criteria andOwnerIdIsNull() {
            addCriterion("owner_ID is null");
            return (Criteria) this;
        }

        public Criteria andOwnerIdIsNotNull() {
            addCriterion("owner_ID is not null");
            return (Criteria) this;
        }

        public Criteria andOwnerIdEqualTo(Long value) {
            addCriterion("owner_ID =", value, "ownerId");
            return (Criteria) this;
        }

        public Criteria andOwnerIdNotEqualTo(Long value) {
            addCriterion("owner_ID <>", value, "ownerId");
            return (Criteria) this;
        }

        public Criteria andOwnerIdGreaterThan(Long value) {
            addCriterion("owner_ID >", value, "ownerId");
            return (Criteria) this;
        }

        public Criteria andOwnerIdGreaterThanOrEqualTo(Long value) {
            addCriterion("owner_ID >=", value, "ownerId");
            return (Criteria) this;
        }

        public Criteria andOwnerIdLessThan(Long value) {
            addCriterion("owner_ID <", value, "ownerId");
            return (Criteria) this;
        }

        public Criteria andOwnerIdLessThanOrEqualTo(Long value) {
            addCriterion("owner_ID <=", value, "ownerId");
            return (Criteria) this;
        }

        public Criteria andOwnerIdIn(List<Long> values) {
            addCriterion("owner_ID in", values, "ownerId");
            return (Criteria) this;
        }

        public Criteria andOwnerIdNotIn(List<Long> values) {
            addCriterion("owner_ID not in", values, "ownerId");
            return (Criteria) this;
        }

        public Criteria andOwnerIdBetween(Long value1, Long value2) {
            addCriterion("owner_ID between", value1, value2, "ownerId");
            return (Criteria) this;
        }

        public Criteria andOwnerIdNotBetween(Long value1, Long value2) {
            addCriterion("owner_ID not between", value1, value2, "ownerId");
            return (Criteria) this;
        }

        public Criteria andMonthIsNull() {
            addCriterion("`month` is null");
            return (Criteria) this;
        }

        public Criteria andMonthIsNotNull() {
            addCriterion("`month` is not null");
            return (Criteria) this;
        }

        public Criteria andMonthEqualTo(String value) {
            addCriterion("`month` =", value, "month");
            return (Criteria) this;
        }

        public Criteria andMonthNotEqualTo(String value) {
            addCriterion("`month` <>", value, "month");
            return (Criteria) this;
        }

        public Criteria andMonthGreaterThan(String value) {
            addCriterion("`month` >", value, "month");
            return (Criteria) this;
        }

        public Criteria andMonthGreaterThanOrEqualTo(String value) {
            addCriterion("`month` >=", value, "month");
            return (Criteria) this;
        }

        public Criteria andMonthLessThan(String value) {
            addCriterion("`month` <", value, "month");
            return (Criteria) this;
        }

        public Criteria andMonthLessThanOrEqualTo(String value) {
            addCriterion("`month` <=", value, "month");
            return (Criteria) this;
        }

        public Criteria andMonthLike(String value) {
            addCriterion("`month` like", value, "month");
            return (Criteria) this;
        }

        public Criteria andMonthNotLike(String value) {
            addCriterion("`month` not like", value, "month");
            return (Criteria) this;
        }

        public Criteria andMonthIn(List<String> values) {
            addCriterion("`month` in", values, "month");
            return (Criteria) this;
        }

        public Criteria andMonthNotIn(List<String> values) {
            addCriterion("`month` not in", values, "month");
            return (Criteria) this;
        }

        public Criteria andMonthBetween(String value1, String value2) {
            addCriterion("`month` between", value1, value2, "month");
            return (Criteria) this;
        }

        public Criteria andMonthNotBetween(String value1, String value2) {
            addCriterion("`month` not between", value1, value2, "month");
            return (Criteria) this;
        }

        public Criteria andResultsIsNull() {
            addCriterion("results is null");
            return (Criteria) this;
        }

        public Criteria andResultsIsNotNull() {
            addCriterion("results is not null");
            return (Criteria) this;
        }

        public Criteria andResultsEqualTo(String value) {
            addCriterion("results =", value, "results");
            return (Criteria) this;
        }

        public Criteria andResultsNotEqualTo(String value) {
            addCriterion("results <>", value, "results");
            return (Criteria) this;
        }

        public Criteria andResultsGreaterThan(String value) {
            addCriterion("results >", value, "results");
            return (Criteria) this;
        }

        public Criteria andResultsGreaterThanOrEqualTo(String value) {
            addCriterion("results >=", value, "results");
            return (Criteria) this;
        }

        public Criteria andResultsLessThan(String value) {
            addCriterion("results <", value, "results");
            return (Criteria) this;
        }

        public Criteria andResultsLessThanOrEqualTo(String value) {
            addCriterion("results <=", value, "results");
            return (Criteria) this;
        }

        public Criteria andResultsLike(String value) {
            addCriterion("results like", value, "results");
            return (Criteria) this;
        }

        public Criteria andResultsNotLike(String value) {
            addCriterion("results not like", value, "results");
            return (Criteria) this;
        }

        public Criteria andResultsIn(List<String> values) {
            addCriterion("results in", values, "results");
            return (Criteria) this;
        }

        public Criteria andResultsNotIn(List<String> values) {
            addCriterion("results not in", values, "results");
            return (Criteria) this;
        }

        public Criteria andResultsBetween(String value1, String value2) {
            addCriterion("results between", value1, value2, "results");
            return (Criteria) this;
        }

        public Criteria andResultsNotBetween(String value1, String value2) {
            addCriterion("results not between", value1, value2, "results");
            return (Criteria) this;
        }

        public Criteria andContinueSignIsNull() {
            addCriterion("continue_sign is null");
            return (Criteria) this;
        }

        public Criteria andContinueSignIsNotNull() {
            addCriterion("continue_sign is not null");
            return (Criteria) this;
        }

        public Criteria andContinueSignEqualTo(Integer value) {
            addCriterion("continue_sign =", value, "continueSign");
            return (Criteria) this;
        }

        public Criteria andContinueSignNotEqualTo(Integer value) {
            addCriterion("continue_sign <>", value, "continueSign");
            return (Criteria) this;
        }

        public Criteria andContinueSignGreaterThan(Integer value) {
            addCriterion("continue_sign >", value, "continueSign");
            return (Criteria) this;
        }

        public Criteria andContinueSignGreaterThanOrEqualTo(Integer value) {
            addCriterion("continue_sign >=", value, "continueSign");
            return (Criteria) this;
        }

        public Criteria andContinueSignLessThan(Integer value) {
            addCriterion("continue_sign <", value, "continueSign");
            return (Criteria) this;
        }

        public Criteria andContinueSignLessThanOrEqualTo(Integer value) {
            addCriterion("continue_sign <=", value, "continueSign");
            return (Criteria) this;
        }

        public Criteria andContinueSignIn(List<Integer> values) {
            addCriterion("continue_sign in", values, "continueSign");
            return (Criteria) this;
        }

        public Criteria andContinueSignNotIn(List<Integer> values) {
            addCriterion("continue_sign not in", values, "continueSign");
            return (Criteria) this;
        }

        public Criteria andContinueSignBetween(Integer value1, Integer value2) {
            addCriterion("continue_sign between", value1, value2, "continueSign");
            return (Criteria) this;
        }

        public Criteria andContinueSignNotBetween(Integer value1, Integer value2) {
            addCriterion("continue_sign not between", value1, value2, "continueSign");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table check_in
     *
     * @mbg.generated do_not_delete_during_merge Sun Apr 19 02:58:57 CST 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table check_in
     *
     * @mbg.generated Sun Apr 19 02:58:57 CST 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}